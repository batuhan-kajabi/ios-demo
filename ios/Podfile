# require_relative '../node_modules/react-native/scripts/react_native_pods'
# require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
#
#
# # Resolve react_native_pods.rb with node to allow for hoisting
# # require Pod::Executable.execute_command('node', ['-p',
# #   'require.resolve(
# #     "react-native/scripts/react_native_pods.rb",
# #     {paths: [process.argv[1]]},
# #   )', __dir__]).strip
#
# platform :ios, '12.4'
# #prepare_react_native_project!
#
# linkage = ENV['USE_FRAMEWORKS']
# if linkage != nil
#   Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#   use_frameworks! :linkage => linkage.to_sym
# end
#
# target 'mbanative' do
#   config = use_native_modules!
#
#   use_react_native!(
#     :path => config[:reactNativePath],
# #     :hermes_enabled => false,
#     # An absolute path to your application root.
#     :app_path => "#{Pod::Config.instance.installation_root}/.."
#   )
#
# permissions_path = '../node_modules/react-native-permissions/ios'
#   pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
#   pod 'Permission-MediaLibrary', :path => "#{permissions_path}/MediaLibrary"
#   pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
#   pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
#   pod 'Permission-Calendars', :path => "#{permissions_path}/Calendars"
#
#   pod 'FirebaseCore', :modular_headers => true
#   pod 'FirebaseCoreExtension', :modular_headers => true
#   pod 'GoogleUtilities', :modular_headers => true
#   pod 'FirebaseABTesting', :modular_headers => true
#   pod 'GoogleDataTransport', :modular_headers => true
#   pod 'FirebaseInstallations', :modular_headers => true
#   pod 'nanopb', :modular_headers => true
#   $RNFirebaseAsStaticFramework = true
#
#   post_install do |installer|
#     # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
#     react_native_post_install(
#       installer,
#       config[:reactNativePath],
#       :mac_catalyst_enabled => false,
#       # :ccache_enabled => true
#     )
#   end
# end


require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'

project 'mbanative',
        'Debug' => :debug,
        'Release' => :release,
        'Staging' => :release

target 'mbanative' do
  config = use_native_modules!
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :fabric_enabled => false,
    :hermes_enabled => true
  )
  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  pod 'Permission-MediaLibrary', :path => "#{permissions_path}/MediaLibrary"
  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
  pod 'Permission-Calendars', :path => "#{permissions_path}/Calendars"

  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseABTesting', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'nanopb', :modular_headers => true
  $RNFirebaseAsStaticFramework = true

#   pod 'lottie-ios', :path => '../node_modules/lottie-ios'



#   pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'


  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
            config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        end
      end
    end
    # For XCode 15 build issue
    system("sed -i '' 's/std::unary_function/std::__unary_function/g' Pods/boost/boost/container_hash/hash.hpp")
  end
end


pre_install do |installer|
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}

  installer.pod_targets.each do |pod|
    if pod.name.eql?('RNPermissions') || pod.name.start_with?('Permission-')
      def pod.build_type;
        # Uncomment the line corresponding to your CocoaPods version
        Pod::BuildType.static_library # >= 1.9
        # Pod::Target::BuildType.static_library # < 1.9
      end
    end
  end
end
